generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Queue {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  position  Int
  inChair   Boolean  @default(false)
  userId    String   @db.ObjectId
  barberId  String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  barber    Barber   @relation(fields: [barberId], references: [id])
  createdAt DateTime @default(now())
}

model Barber {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String  @unique
  queue Queue[]
  user  User[]
}

model Barbershop {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  is_open   Boolean
  opened_at DateTime
}

model User {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  name               String?
  email              String?              @unique
  password           String
  isAdmin            Boolean              @default(false)
  queueEntries       Queue[]
  barberId           String?              @db.ObjectId
  preferenceBarber   Barber?              @relation(fields: [barberId], references: [id])
  PasswordResetToken PasswordResetToken[]
}

model PasswordResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
